<div id="map" class="d-flex" style="min-height: 0; flex-grow: 1">
    <div id="layers-status" style="display: none; position: absolute; top: 10px; left: 10px; z-index: 20000; font-family: 'JetBrains Mono', sans-serif; font-size: 0.9rem; color: #fff">
        Showing sectors at <span id="layers-alt"></span> ft<br><small class="text-muted">Use ArrowUp and ArrowDn keys to change altitude</small><br><span class="text-muted small" style="font-family: 'Figtree', sans-serif">Data provided by <a class="text-muted" href="https://vatglasses.uk/">VATGlasses</a></span>
    </div>
    <div class="d-flex" style="justify-content: center; flex-direction: row; position: fixed; left: 0; right: 0; bottom: 70px; z-index: 1199;">
        <div id="controls" class="d-flex" style="border-radius: 5rem; border: 1px solid rgba(255,255,255,0.08); -webkit-backdrop-filter: blur(25px); backdrop-filter: blur(25px); font-size: 1rem; color: #888; overflow: hidden">
            <div class="loading py-1" style="z-index: 1199">Loading...</div>
            <div class="map-button py-1 map-button-active d-none" onclick="toggleFlights()" style="" id="flights"><i class="fa fa-plane"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleBasemap()" style="" id="light"><i class="far fa-lightbulb"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleLabels()" style="" id="labels"><i class="fas fa-tags"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleNexrad()" id="wx"><i class="fas fa-cloud-sun-rain"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleATC()" id="atc">ATC</div>
            <div class="map-button py-1 d-none" onclick="toggleLayers()" id="layers"><i class="fas fa-glasses"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleSigmet()" id="sigmet">SIGMET</div>
            {{!-- <div class="map-button py-1 d-none" onclick="toggleNat()" id="nat">NAT</div> --}}
            {{!-- <div class="map-button py-1 d-none" onclick="toggleWorldflight()" id="wf">WORLDFLIGHT</div> --}}
        </div>
    </div>

    <!-- Flight Display Sidebar -->
    {{> flights-sidebar}}

    <!-- Airports Sidebar -->
    {{> airport-sidebar }}

    <!-- Users Sidebar -->
    {{> user-sidebar }}

    <!-- Streamers Bottom Bar -->
    {{> streamers-bar }}

    <!-- Footer Group -->
    {{> footer}}
</div>
<script>

$(document).ready(async function() {

    airports = [];
    flights = [];
    manual = false;

    // Airports show everything
    filterName = null;
    filterCriteria = null;

    $(document).keydown(function(e) {
        console.log(e.keyCode)
        if(e.keyCode == 38 && layers_alt <= 595)
        {
            layers_alt += 5;
            showLayersView(layers_alt);
        }
        if(e.keyCode == 40 && layers_alt >= 5)
        {
            layers_alt -= 5;
            showLayersView(layers_alt);
        }
    })

    await initialize();
    const initialiseDate = new Date();

    setInterval(
        async (initialiseDate) => { 
            const now = new Date();
            const elasped = new Date(now - initialiseDate);

            // Refresh every 15 seconds from when this page was loaded, otherwise interpolate flight positions
            if (elasped.getSeconds() % 15 == 0)
            {
                flights = await refreshFlights(filterName, filterCriteria);
                await refreshATC();
                await updateInfobar();
                setLayerOrder();
            }
            else
            {
                interpolateLoc();
            }
            
        }, 1000, initialiseDate);
})

async function initialize()
{
    await initializeMap();
    await initializePatrons();

    await initializeAirports();
    flights = await refreshFlights(filterName, filterCriteria);
    eventsByAirport = await loadUpcomingEvents();
    airlines = await loadAirlines();
    regprefixes = await loadRegprefixes();

    await initializeNexrad();
    await initializeNat();
    await initializeATC();
    await refreshATC();
    await initializeInfobar();
    await updateSigmet();
    {{!-- initializeWorldFlight(); --}}
    handleCookies();

    await updateInfobar();
    setLayerOrder();

    // If redirected from another page
    let searchParams = new URLSearchParams(window.location.search);
    if(searchParams.has('uid'))
    {
        zoomToFlight(searchParams.get('uid'));
    }
    else if(searchParams.has('airport'))
    {
        zoomToAirport(searchParams.get('airport'));
    }
    else if(searchParams.has('user'))
    {
        zoomToUser(searchParams.get('user'));
    }
}
</script>